from __future__ import annotations

import numpy as np
import optiland.backend as be
import pytest
from optiland.samples import NavarroWideAngleEye
from optiland.wavefront import OPD

from tests.helpers import build_args
from visisipy import EyeModel
from visisipy.optiland.analysis.wavefront import generate_opd_map


@pytest.fixture
def configure_optiland_backend(optiland_backend_settings):
    be.set_backend(optiland_backend_settings["computation_backend"])

    if optiland_backend_settings["computation_backend"] == "torch":
        be.set_device(optiland_backend_settings["torch_device"])
        be.set_precision(optiland_backend_settings["torch_precision"])


class TestGenerateOPDMap:
    @pytest.mark.parametrize("field", [(0, 0), (1 / np.sqrt(2), 1 / np.sqrt(2)), (0, 1)])
    def test_generate_opd_map(self, field, configure_optiland_backend):
        model = NavarroWideAngleEye()
        wavelength = 0.543
        sampling = 32

        opd = OPD(model, field=field, wavelength=wavelength, num_rays=sampling, distribution="uniform")

        # Generate OPD map using Optiland's interpolation method
        data_optiland = opd.generate_opd_map(num_points=sampling)

        # Generate OPD map using the index-based method
        data_fast = generate_opd_map(
            opd.get_data(field=field, wl=wavelength), distribution=opd.distribution, sampling=sampling
        )

        np.testing.assert_allclose(data_fast["z"], data_optiland["z"], equal_nan=True)
        np.testing.assert_array_equal(data_fast["x"], data_optiland["x"])
        np.testing.assert_array_equal(data_fast["y"], data_optiland["y"])

    def test_generate_opd_map_random(self, configure_optiland_backend):
        model = NavarroWideAngleEye()
        field = (0, 0)
        wavelength = 0.543
        sampling = 32

        opd = OPD(model, field=field, wavelength=wavelength, num_rays=sampling, distribution="uniform")

        # fmt: off
        opd.data[field, wavelength].opd = be.array([-37.085341, 31.46378332, 3.4652167, -3.00687097, 80.23243413, 10.92901172, 65.37232061, 45.11470682, -92.28855079, 54.6220105, -56.62594998, 80.62992937, -91.41516188, -33.38559311, -80.05341055, -4.88217658, 64.00448717, -40.36252807, -69.81302054, -33.94659286, 62.77602838, -71.92320844, -54.52751018, -86.2296071, 41.1420088, -20.95335129, -37.83200457, 43.72527807, -32.80449153, 45.55425464, 63.03987906, -56.46743131, 94.76373937, -67.52841042, -41.83181867, -64.04094183, -30.89886873, -3.98782244, 4.4351738, 70.72120846, 77.88958176, -55.97922784, 24.57880644, -77.70078854, -8.20602796, -35.53329239, -36.69985091, -3.48315166, 45.96552711, -86.16346824, 75.83466754, 46.96275493, -64.70012222, 87.83218182, 1.2624448, 99.96171562, -60.54810514, 6.98163968, -41.95039149, -39.16528852, 18.21307617, 84.34381337, 61.05277112, 44.7882797, 11.83475642, 84.45970073, -1.52771866, 74.76643567, 66.79632878, -57.23293064, 54.24509259, -97.56576861, -35.43409249, -54.08651106, 1.3725917, 47.37063234, -80.46472651, 2.98444039, 87.68240434, -54.2706898, 35.42822882, 18.57605416, -97.98726087, -4.83476083, 41.75407819, -91.2049136, 75.9042966, 4.01628333, -93.86779033, -55.11727762, 90.73513929, 16.46394661, -78.50548645, -42.49109954, -8.65927483, -95.80998615, -17.67689728, -2.10827291, -51.26442494, 17.72780006, 50.64802392, -52.83315518, 24.09998006, 27.92444859, 89.70806023, 55.65523346, 69.66905396, -1.91601831, -62.9302826, 99.16305859, -74.12884779, -5.70853613, -86.38138015, 88.77017147, 92.98498817, 43.8778124, -30.00143127, -49.12351978, -46.93933509, -74.54119492, 5.16179062, -71.63654486, -36.65386669, 25.34129519, 45.50872192, -95.14545908, -13.97680312, 30.42491897, 70.64919523, -4.93504356, 93.84117434, -46.87349049, -97.29825867, -3.24942706, -48.777241, 64.7435344, -53.44546556, -37.87415634, 58.2454862, 43.02865041, 11.61024733, 40.98961238, -16.27262729, -98.93799048, -97.7289743, 2.24435751, -83.34180406, -89.78490397, 93.10332783, 71.80052793, -69.59455456, -99.86715628, 88.33355908, -44.33494034, -62.82047943, 38.30162157, -78.21925223, -47.0700804, 95.01893604, 27.89255489, 4.1355583, -20.41627703, 54.90019098, -71.8085047, 93.46756041, 72.22460161, 23.53139651, -91.41876192, 40.17112989, 82.65686818, 4.9154135, -29.15503563, -75.944531, 50.98022083, 77.00437024, -79.94965118, 51.79691095, -96.58790275, 93.41098362, 23.01160413, 10.4878118, -40.81003328, 85.85833431, -46.81887453, 65.62932264, 97.02173587, 56.6793291, 3.79798408, -86.78514723, -5.51724217, -12.34881061, -59.44079176, -15.28247266, -28.44842318, -67.26314777, -11.72517133, -47.44000874, 4.41248414, -92.96798806, 81.24628396, 63.2728611, 10.5162665, 70.36171655, 92.47901476, -77.89554119, 26.16636168, 99.59880019, 97.57783387, 20.66459846, -74.39582591, 16.6385662, -99.58707289, -60.21773307, 91.22463191, -33.91188548, 27.67802116, -43.82810107, 89.56437742, 45.71174599, -34.06976848, 58.35228424, -78.3668951, -21.53621199, -55.75637445, 36.74528946, -79.51074365, -20.59483354, -44.67005396, 1.26858386, -30.0204639, 41.28211553, -95.08459514, 26.79738426, -53.88574206, -46.25819425, 60.05112072, 91.1136788, -36.68995799, 65.36105407, -79.20183241, 26.7963306, 50.20645991, -68.80441439, -14.79952247, 78.54143285, -79.28430731, -96.38072836, 18.11707581, -12.89369189, 59.73784978, 84.69110764, -40.16927109, -22.31917657, -2.74558273, 17.63029209, 96.77076594, 39.46605017, -22.09029853, -47.24646271, 88.92514368, -72.89031338, 44.0531705, 85.07900506, 32.93311731, -15.38911197, -60.20181201, -26.50493555, 41.37436188, 29.90684484, 85.59523332, 73.37218273, 63.23015045, 82.29017507, -44.73256945, -26.09529197, -24.02121924, 12.09011774, 33.64364591, -42.65666339, -96.10750654, -20.15552327, -38.29440809, 88.4369438, 77.65300811, 72.06213567, 30.59995219, -31.14216706, 9.76985348, 63.04500814, -80.27792626, 60.21497605, -91.76404173, 63.28420624, 61.51276083, -89.79853823, 25.43214229, 0.49061486, -66.03609937, -70.32421246, 54.65182521, 13.53854977, 96.59982698, 96.44955546, 98.53339869, -76.27689633, 87.65122739, -51.0860782, -8.35754805, 51.48131116, -59.27581358, 13.26232111, -62.83665035, -79.05277866, -76.68827751, -28.47219303, -99.06903263, -15.02921576, 32.83942102, -19.662363, -82.8410799, -87.4622276, -44.37669745, -66.13746189, 93.01899464, -69.75395501, 61.09248748, 17.22158835, 13.857384, 2.41614318, 94.35261522, -27.23104498, 57.58315019, 11.05882149, -20.87326647, 91.09318666, 19.66319387, -76.21661157, -16.4921598, 56.31634554, 38.74940465, 83.26806597, -48.12452317, 51.63874327, -8.02495852, 14.72194939, 91.0093362, 95.857264, 72.31819279, -28.18058245, 77.54016715, 27.72183553, -14.00064391, -92.8514635, 54.02562484, 0.42111614, 57.23769989, 49.60455987, 58.71347361, -39.86976826, 60.15971981, 9.76926569, -5.33475991, 35.02518276, -95.72826341, -79.53663682, -41.56452697, 96.59802199, -72.05084423, -33.88073985, -89.78938706, -33.74622394, -35.9347427, 89.36143419, 69.0308174, -23.44715615, -95.04618839, 66.2062228, 32.10723543, -69.52710327, 99.2142542, -79.95331252, 73.42290832, -41.14676717, -12.92930673, 59.09130536, 35.5016712, 87.57287489, 24.22806509, -80.4379677, 76.87207265, 53.831105, 42.37409018, -89.25329053, -20.75545107, -66.51283611, 64.38078168, 40.10572456, 76.61551946, 93.31502138, 54.94952284, 98.84661664, 22.95397723, -92.57407922, -97.14969697, -31.57922496, 64.69434381, 73.22694126, 92.16250576, -86.97570629, -91.0857778, 82.65671927, -38.99066033, 11.59748012, 96.4889766, -19.91029305, 33.17427966, -19.82408727, 53.63893289, 5.54294511, -52.4953724, -45.73877975, -48.38815749, 6.46406565, 40.6378032, 89.85598001, 38.81747502, 56.23856879, -66.21477683, -25.187475, -17.24395603, 37.276046, -40.82160472, -39.34161572, -28.82216907, 62.06041631, 15.51801801, -84.94454403, -84.35078006, -25.74261114, 53.31821012, 37.7366853, 41.59647093, 53.44201321, -42.56945742, 9.65125639, 8.67052806, 47.92650024, 91.37411382, -44.40201104, 58.65633455, 31.9941097, 16.04757417, 54.97595587, 88.80649329, -92.66171643, -70.5199795, 51.2574463, -83.24172942, 3.22474015, -56.02784467, -45.14085923, 40.36809659, -93.96144535, 74.66388558, -11.10420893, 0.47865878, 8.00959274, 29.10885892, -31.02868268, -79.77850189, -36.32421267, -66.3715764, 11.22663589, -36.39427381, 91.6134356, 93.1468556, 24.02517611, 23.49945353, 97.07571291, 77.45663025, 53.01398983, -37.28187765, -26.89219438, -59.74664685, -2.57037462, 98.07370443, 82.4301906, -76.3301132, -94.96194214, 79.72753368, 7.43402559, -59.96202236, 34.73065392, 28.84463559, -75.58287863, -48.0799533, -87.98440714, -58.02790523, -73.53886503, -61.35274151, 37.09342918, -90.10005115, -79.62907695, -73.16527238, -36.69177581, -40.24993783, -48.98724294, 50.10733069, 99.60455755, 6.79558473, 88.84054358, -20.67797757, -78.66351064, -18.24523411, -40.77444532, -1.31860754, 31.40873538, -7.78995617, 87.03210242, 76.95296446, 40.39551903, -2.06301753, -73.66254364, -20.59726664, 40.88030788, -43.02289589, -79.20238449, 81.5796915, 41.81016196, 23.05528533, 58.49978112, 67.12920752, -3.30820037, 76.23765028, 83.28380214, -45.68978092, 21.50907196, 5.31680576, 7.58915583, 87.53261879, -38.96225946, 96.68679565, 80.42624296, -8.25542228, 63.49065272, 53.80939886, 35.57899392, -36.03322212, -60.70980164, 34.30553935, 68.59465928, -96.74944226, 28.56067506, -11.42539508, 79.61755103, -35.70541383, -5.16303755, 2.95342081, -71.91209573, 42.57846054, 66.09526902, -88.41814462, -41.72223589, -92.39106369, 91.30882094, 33.43376414, 92.84008389, 6.29885567, 60.41370478, -25.11720322, -29.23619349, -24.34643658, 31.57242675, -28.1093698, 80.07349032, 96.65497301, -93.91469693, -61.27534192, -77.55000148, -91.52719058, -54.45180133, -10.64133593, 67.39807306, -55.6351939, -1.21094887, 85.92374789, 33.44294136, 59.61580395, 10.19879404, 96.09329177, 17.73243094, -90.89785721, -60.40344001, -19.04527421, 20.25543451, 54.38617348, -17.38277482, 42.011661, 57.97390062, -36.54796055, 95.85404801, 29.93129905, 76.19961216, 11.18753776, 48.32062143, 54.10881232, 81.64967585, -69.93004863, 11.65668483, -14.32429738, 84.63180423, -78.98106115, 96.51477774, 75.09026482, -85.23474369, -1.80672289, 43.51190004, 47.63030914, 81.29882505, 59.97308712, -37.81392393, -0.31304283, 40.35715259, -72.31263173, -61.20184048, -3.79151038, -40.35084026, 72.51184996, 17.2554643, -30.26696046, 69.76660512, 60.97568971, 99.67097542, 69.46153767, -17.10869304, -74.50022365, 68.12818164, -88.04841641, -29.94575853, 83.94759615, 92.15329469, 28.1129187, 37.7296634, -91.50910225, 2.89606822, 9.37363576, -31.97985078, -86.28063305, -54.21848006, -28.40321263, -12.9716027, 18.18534511, 44.47830374, -36.47362535, -34.20924802, -96.06167146, -91.82502798, -48.43566114, 48.04899953, 25.66276607, 53.95780414, 53.78388724, 71.31349353, 44.0638532, 95.8021838, 79.76504386, 17.34343324, 17.6315341, -93.14659193, 99.70531554, -73.68480053, 48.06943933, 64.20303902, -25.38909414, -60.62958907, -80.24802264, 49.72120117, -9.46929416, 42.7435518, 83.08152977, -70.68325277, 83.83420014, -17.6747081, -38.94659802, 88.61245212, 98.13033852, -60.22155645, 31.36766939, -78.70093725, 30.18280077, 65.46264556, 36.8997093, -16.53337159, -23.38672809, -21.37551696, 17.9423636, 76.31345401, 85.81323145, -89.29407596, -63.67552107, -77.55513683, -61.33307185, -30.67843788, 1.30633652, 25.8922454, 46.42844383, 78.02230828, 97.81768745, 32.57129571, 69.07290373, 55.60776938, -38.49359216, 75.13845405, -91.44737241, -99.92653125, -45.25347412, -7.58049407, 27.672579, -79.64594669, 34.60202677, 60.36317341, -62.93741608, -16.97494903, 3.99699799, -9.63859638, 59.96598618, 92.10447962, 59.7906328, -84.40143642, 60.98711443, -86.68073355, -52.80592295, -69.38062063, -60.49617863, 5.66302541, 34.33797152, -5.93574353, 91.93912781, -51.94153599, 52.62804605])
        # fmt: on

        # Generate OPD map using Optiland's interpolation method
        data_optiland = opd.generate_opd_map(num_points=sampling)

        # Generate OPD map using the index-based method
        data_fast = generate_opd_map(
            opd.get_data(field=field, wl=wavelength), distribution=opd.distribution, sampling=sampling
        )

        np.testing.assert_allclose(data_fast["z"], data_optiland["z"], equal_nan=True)


class TestOPDMapAnalysis:
    @pytest.mark.parametrize(
        "field_coordinate,wavelength,field_type,sampling,remove_tilt",
        [
            (None, None, None, None, None),
            (None, None, "object_height", 64, False),
            ((0, 0), 0.550, "angle", 128, True),
            ((10, 5), 0.400, "object_height", 256, False),
            ((5.5, 5.5), 0.550, "angle", 512, True),
        ],
    )
    def test_opd_map(
        self, optiland_backend, optiland_analysis, field_coordinate, wavelength, field_type, sampling, remove_tilt
    ):
        optiland_backend.build_model(EyeModel(), object_distance=10 if field_type == "object_height" else float("inf"))

        args = build_args(
            field_coordinate=field_coordinate,
            wavelength=wavelength,
            field_type=field_type,
            sampling=sampling,
            remove_tilt=remove_tilt,
            non_null_defaults={"field_type", "sampling", "remove_tilt"},
        )

        assert optiland_analysis.opd_map(**args)

    def test_opd_map_use_exit_pupil_shape_warning(self, optiland_backend, optiland_analysis):
        optiland_backend.build_model(EyeModel())

        with pytest.warns(UserWarning, match="Correcting for the exit pupil shape is not supported in Optiland."):
            optiland_analysis.opd_map(use_exit_pupil_shape=True)
